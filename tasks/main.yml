---
- name: Run setup for RedHat Distributions
  ansible.builtin.include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: Run setup for Debian Distributions
  ansible.builtin.include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Ensure containerd is installed.
  ansible.builtin.package:
    name: "{{ containerd_package }}-{{ containerd_version }}"
    state: "{{ containerd_package_state }}"

- name: Ensure crictl is installed
  ansible.builtin.package:
    name: cri-tools
    state: present

- name: Ensure containerd is started and enabled at boot.
  ansible.builtin.service:
    name: containerd
    state: "{{ containerd_service_state }}"
    enabled: "{{ containerd_service_enabled }}"

- name: Ensure containerd config directory exists.
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: '0755'
  register: containerd_dir

- name: Create Containerd Config File
  when: containerd_dir is succeeded
  ansible.builtin.template:
    src: config.toml.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: '0644'
  register: cointainerd_default
  notify: Restart containerd

- name: Create HTTP Proxy Folder
  ansible.builtin.file:
    path: /etc/systemd/system/containerd.service.d
    state: directory
    owner: root
    group: root
    mode: '0644'
    recurse: true
  register: containerd_proxy_dir

- name: Create Containerd Config File
  when: containerd_proxy_dir is succeeded
  ansible.builtin.template:
    src: http_proxy.conf.j2
    dest: /etc/systemd/system/containerd.service.d/http-proxy.conf
    owner: root
    group: root
    mode: '0644'
  register: containerd_proxy
  notify: Reload containerd

- name: Create crictl config file
  ansible.builtin.template:
    src: crictl.yaml.j2
    dest: /etc/crictl.yaml
    owner: root
    group: root
    mode: '0644'
  register: crictl_conf

- name: Replace Container Runtime in Kubelet
  ansible.builtin.copy:
    dest: /var/lib/kubelet/kubeadm-flags.env
    content: "{{ kubelet_kubeadm_args }}\n"
    owner: root
    group: root
    mode: '0644'
  register: change_runtime
  notify: Reload kubelet

- name: Check if kubeadm has already run
  ansible.builtin.stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

- name: Enable and check kubelet service
  when: kubeadm_ca.stat.exists
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    state: started
    enabled: true

- name: Ensure containerd is restarted immediately if necessary.
  ansible.builtin.meta: flush_handlers
