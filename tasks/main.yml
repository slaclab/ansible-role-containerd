---
- name: Run setup for RedHat Distributions
  ansible.builtin.include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: Run setup for Debian Distributions
  ansible.builtin.include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Ensure containerd is installed.
  ansible.builtin.package:
    name: "{{ containerd_package }}-{{ containerd_version }}"
    state: "{{ containerd_package_state }}"

- name: Ensure crictl is installed
  ansible.builtin.package:
    name: cri-tools
    state: present

- name: Ensure containerd is started and enabled at boot.
  ansible.builtin.service:
    name: containerd
    state: "{{ containerd_service_state }}"
    enabled: "{{ containerd_service_enabled }}"

- name: Ensure containerd config directory exists.
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: '0755'
  register: containerd_dir

- name: Create Containerd Config File
  when:
    - ( nvidia_node | default('false')) == 'false'
  ansible.builtin.template:
    src: config.toml.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: '0644'
  register: containerd_default
  notify: Restart containerd

- name: Add nvidia toolkit
  ansible.builtin.include_tasks: nvidia.yml
  when:
    - ( nvidia_node | default('false')) == 'true'

- name: Ensure directory HTTP Proxy Folder
  ansible.builtin.file:
    path: /etc/systemd/system/containerd.service.d
    state: directory
    mode: '0755'
    owner: root
    group: root
  register: containerd_proxy_dir

- name: Create HTTP Proxy
  when: containerd_proxy_dir is succeeded
  ansible.builtin.copy:
    dest: /etc/systemd/system/containerd.service.d/http-proxy.conf
    mode: '0644'
    owner: root
    group: root
    content: |
      [Service]
      Environment="HTTP_PROXY=http://sdfproxy.sdf.slac.stanford.edu:3128"
      Environment="HTTPS_PROXY=http://sdfproxy.sdf.slac.stanford.edu:3128"
      Environment="NO_PROXY=localhost,127.0.0.1,::1,10.0.0.0/8,192.168.0.0/16,134.79.0.0/16,172.16.0.0/12,.slac.stanford.edu,.sdf.slac.stanford.edu"
  notify: Restart kubelet

###
## Not working yet with docker-registry
###
# - name: Ensure absent HTTP Proxy Folder
#   ansible.builtin.file:
#     path: /etc/systemd/system/containerd.service.d
#     state: absent
#   register: containerd_proxy_dir

# - name: Create Registry Morrir Tree
#   ansible.builtin.file:
#     path: /etc/containerd/certs.d/_default
#     state: directory
#     owner: root
#     group: root
#     mode: '0755'
#     recurse: yes
#   register: containerd_registry_tree

# - name: Create Default Registry Mirror
#   when: containerd_registry_tree is succeeded
#   ansible.builtin.copy:
#     dest: /etc/containerd/certs.d/_default/hosts.toml
#     owner: root
#     group: root
#     mode: '0755'
#     content: |
#       server = "https://docker-registry.slac.stanford.edu"

#       [host."docker-registry.slac.stanford.edu"]
#         capabilities = ["pull", "resolve"]
#   notify: Reload containerd

- name: Create crictl config file
  ansible.builtin.template:
    src: crictl.yaml.j2
    dest: /etc/crictl.yaml
    owner: root
    group: root
    mode: '0644'
  register: crictl_conf

- name: Remove deprecated kubeadm flags
  ansible.builtin.copy:
    dest: /var/lib/kubelet/kubeadm-flags.env
    content: |
      KUBELET_KUBEADM_ARGS=""
    owner: root
    group: root
    mode: '0644'
  register: change_runtime

- name: Replace config.yaml file
  ansible.builtin.template:
    src: config.yaml.j2
    dest: /var/lib/kubelet/config.yaml
    owner: root
    group: root
    mode: '0644'
  register: config_conf

- name: Check if kubeadm has already run
  ansible.builtin.stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

- name: Ensure control-plane server
  when: kubeadm_ca.stat.exists
  ansible.builtin.lineinfile:
    path: /etc/kubernetes/kubelet.conf
    regexp: '^    server:'
    line: '    server: https://sdfk8sm.sdf.slac.stanford.edu:6443'

- name: Make kubelet service dependant of weka mount
  when:
    - ( weka_node | default('false')) == 'true'
  ansible.builtin.template:
    src: kubelet-service.j2
    dest: /usr/lib/systemd/system/kubelet.service
    owner: root
    group: root
    mode: '0644'
  register: kubelet_service

- name: Enable and check kubelet service
  when:
  - kubeadm_ca.stat.exists
  - kubelet_service is succeeded
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    state: restarted
    enabled: true

- name: Ensure containerd is restarted immediately if necessary.
  ansible.builtin.meta: flush_handlers
