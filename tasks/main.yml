---
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Ensure containerd is installed.
  package:
    name: "{{ containerd_package }}"
    state: "{{ containerd_package_state }}"

- name: Ensure containerd is started and enabled at boot.
  service:
    name: containerd
    state: "{{ containerd_service_state }}"
    enabled: "{{ containerd_service_enabled }}"

- name: Ensure containerd config directory exists.
  file:
    path: /etc/containerd
    state: directory
  register: containerd_dir

- name: Create Containerd Config File
  when: containerd_dir is succeeded
  template:
    src: config.toml.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: '0644'
  register: cointainerd_default
  notify: restart containerd

- name: Create HTTP Proxy Folder
  file:
    path: /etc/systemd/system/containerd.service.d
    state: directory
    owner: root
    group: root
    mode: '0644'
    recurse: true
  register: containerd_proxy_dir

- name: Create Containerd Config File
  when: containerd_proxy_dir is succeeded
  template:
    src: http_proxy.conf.j2
    dest: /etc/systemd/system/containerd.service.d/http-proxy.conf
    owner: root
    group: root
    mode: '0644'
  register: containerd_proxy
  notify: restart containerd

- name: Create HTTP_Proxy env files
  template:
    src: proxy_env.j2
    dest: /etc/profile.d/proxy_vars.sh
    owner: root
    group: root
    mode: '0755'
  register: http_proxy_env

- name: Ensure containerd is restarted immediately if necessary.
  meta: flush_handlers
